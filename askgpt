#!/usr/bin/env python3
#
#  Tool to help ask things of OpenAI.
#
#  Sean Reifschneider, May 2023
#  https://github.com/linsomniac/askgpt

from dotenv import load_dotenv
import os
import sys
import openai
from typing import Dict, List
from collections import OrderedDict
import yaml

def ask_openai(api_key: str, model: str, max_tokens: int, question: List[Dict[str, str]]) -> str:
    openai.api_key = api_key
    
    messages = []
    for k,v in [list(x.items())[0] for x in question]:
        messages.append({'role': k, 'content': v.rstrip()})

    response = openai.ChatCompletion.create(model=model, messages=messages)

    return response.choices[0]['message']['content']


def main():
    load_dotenv(dotenv_path=os.path.expanduser("~/.askgpt"))
    api_key = os.environ["OPENAI_API_KEY"]
    model = os.environ.get("OPENAI_MODEL", "gpt-3.5-turbo")
    model_max_tokens = int(os.environ.get("OPENAI_MODEL_MAX_TOKENS", 200))

    data = yaml.load(open(sys.argv[1], 'r'), Loader=yaml.SafeLoader)
    result = ask_openai(api_key, model, model_max_tokens, data)

    result = result.replace('\n', '\n    ').rstrip()

    with open(sys.argv[1], 'a') as fp:
        fp.write(f'\n- assistant: |\n    {result}\n\n- user: |\n    ')
    print(result)

if __name__ == '__main__':
    main()
